//This script controls the hover tank
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class HoverTankController : MonoBehaviour
{
    //variables
    Rigidbody rbody;
    float distance;
    float antigravForce;
    RaycastHit hit;

    float hInput, vInput;
    float movementSpeed, rotationSpeed;

    bool onFlatGround;

    //declaration
    void Start()
    {
        rbody = GetComponent<Rigidbody>();
        distance = 2.0f;
        movementSpeed = 10.0f;
        rotationSpeed = 100;
        onFlatGround = true;
    }

    void FixedUpdate()
    {
        //quit program
        if (Input.GetKeyDown(KeyCode.Escape))
        {
            Application.Quit();
        }

        //controls the hover
        antigravForce = rbody.mass;

        if (Physics.Raycast(transform.position, Vector3.down, out hit, distance))
        {
            rbody.AddForce(transform.up * (distance - hit.distance) / distance * antigravForce, ForceMode.Impulse);
        }
    }

    private void Update()
    {
        //inputs
        hInput = Input.GetAxis("Horizontal");
        vInput = Input.GetAxis("Vertical");

        //movement
        rbody.AddRelativeForce(0, 0, vInput * movementSpeed * Time.deltaTime, ForceMode.Impulse);
        transform.Rotate(Vector3.up, hInput * rotationSpeed * Time.deltaTime);

        //controls the rotation
        if (hInput == 0 && vInput == 0 && onFlatGround)
        {
            transform.localRotation = Quaternion.Euler(0, transform.localRotation.eulerAngles.y, 0);
        }

        if(onFlatGround)
        {
            if (transform.localRotation.x > 0)
            {
                transform.Rotate(Vector3.right, Time.deltaTime * -5, Space.Self);
            }
            if (transform.localRotation.x < 0)
            {
                transform.Rotate(Vector3.right, Time.deltaTime * 5, Space.Self);
            }
            if (transform.localRotation.z > 0)
            {
                transform.Rotate(Vector3.forward, Time.deltaTime * -5, Space.Self);
            }
            if (transform.localRotation.z < 0)
            {
                transform.Rotate(Vector3.forward, Time.deltaTime * 5, Space.Self);
            }
        }
    }

    //triggers to check if there is a ramp
    private void OnTriggerEnter(Collider other)
    {
        if (other.GetType() == typeof(BoxCollider))
        {
            if (other.transform.localRotation.x != 0 || other.transform.localRotation.x != 0 || other.transform.localRotation.x != 0)
            {
                transform.Rotate(Vector3.right, Time.deltaTime * -5, Space.Self);
                onFlatGround = false;
            }
            else if (other.transform.localRotation.x == 0 && other.transform.localRotation.x == 0 && other.transform.localRotation.x == 0)
            {
                onFlatGround = true;
            }
        }

        else if (other.GetType() == typeof(CapsuleCollider))
        {
            if (other.transform.localRotation.x != 0 || other.transform.localRotation.x != 0 || other.transform.localRotation.x != 0)
            {
                transform.Rotate(Vector3.right, Time.deltaTime * 5, Space.Self);
                onFlatGround = false;
            }
            else if (other.transform.localRotation.x == 0 && other.transform.localRotation.x == 0 && other.transform.localRotation.x == 0)
            {
                onFlatGround = true;
            }
        }
    }

    private void OnTriggerStay(Collider other)
    {
        if (other.GetType() == typeof(BoxCollider))
        {
            if(other.transform.localRotation.x != 0 || other.transform.localRotation.x != 0 || other.transform.localRotation.x != 0)
            {
                transform.Rotate(Vector3.right, Time.deltaTime * -5, Space.Self);
                onFlatGround = false;
            }
            else if(other.transform.localRotation.x == 0 && other.transform.localRotation.x == 0 && other.transform.localRotation.x == 0)
            {
                onFlatGround = true;
            }
        }

        else if (other.GetType() == typeof(CapsuleCollider))
        {
            if (other.transform.localRotation.x != 0 || other.transform.localRotation.x != 0 || other.transform.localRotation.x != 0)
            {
                transform.Rotate(Vector3.right, Time.deltaTime * 5, Space.Self);
                onFlatGround = false;
            }
            else if (other.transform.localRotation.x == 0 && other.transform.localRotation.x == 0 && other.transform.localRotation.x == 0)
            {
                onFlatGround = true;
            }
        }
    }
}
